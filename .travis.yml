language: rust
cache: cargo
sudo: required

git:
  lfs_skip_smudge: true

os: linux

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

env:
  - RUSTFLAGS="-C link-dead-code"

rust:
  - stable
  - beta
  - nightly

after_success:
  - |
      wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
      tar xzf master.tar.gz &&
      cd kcov-master &&
      mkdir build &&
      cd build &&
      cmake .. &&
      make &&
      make install DESTDIR=../../kcov-build &&
      cd ../.. &&
      rm -rf kcov-master &&
      for file in target/debug/gtfs_sim*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
      bash <(curl -s https://codecov.io/bash) &&
      echo "Uploaded code coverage"

jobs:
  include:
    - stage: deploy
      env: RUSTFLAGS=""
      install:
        - cargo install --force wasm-pack
      before_script:
        - git lfs pull
      script:
        - cargo run --release import import/data/vbb.bzip
        - wasm-pack build wasm --target web --out-dir www/wasm
      after_success:
        - echo "Skipped coverage reporting"
      before_deploy:
        - rm wasm/www/wasm/.gitignore wasm/www/gl-matrix/.gitignore
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        local_dir: wasm/www
  allow_failures:
    - rust: nightly

stages:
  - name: deploy
    if: branch = master
